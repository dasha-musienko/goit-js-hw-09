{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,UAAWJ,SAASC,cAAc,WA0BpC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAOC,QAAU,IAAIC,SAAQ,SAACC,EAASC,GACrCC,YAAW,WACLP,EACFK,EAAQ,CAACP,WAAUC,UAEnBO,EAAO,CAACR,WAAUC,S,GAEnBA,E,IAjCPT,EAAKM,UAAUY,iBAAiB,SAEhC,SAA+BC,GAC7BA,EAAIC,iBAKJ,IAJA,IAAIC,EAAQC,OAAOtB,EAAKC,WAAWsB,OAC7BC,EAAOF,OAAOtB,EAAKI,UAAUmB,OAC7BE,EAASH,OAAOtB,EAAKK,YAAYkB,OAE9BG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAGrDnB,EAAcmB,EAAUL,GACvBM,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEvEwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGrEY,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delayInput: document.querySelector(\"input[name='delay']\"),\n  stepInput: document.querySelector(\"input[name='step']\"),\n  amountInput: document.querySelector(\"input[name='amount']\"),\n  submitBtn: document.querySelector(\"button\"),\n}\n\nrefs.submitBtn.addEventListener('click', submitBtnClickHandler)\n\nfunction submitBtnClickHandler(evt) {\n  evt.preventDefault();\n  let delay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n  const amount = Number(refs.amountInput.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n\n\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  \n    delay += step\n} }\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delayInput","document","querySelector","stepInput","amountInput","submitBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promise","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.84c1a2de.js.map"}